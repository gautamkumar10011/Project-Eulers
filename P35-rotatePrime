#include<iostream>
#include<cstdio>
#include<list>
using namespace std ;
long long int checkPrime(long long int num) ;
int rotate_prime(char * , int rear ,int front ,int len) ;
int Problem_35()
{
	list<int> l1  ;
	list<int> :: iterator itr1 ;
	int data  =  0 ;
	int i , j , k = 0 ; // for  the loop
	int len ;
	int front , rear ;
	FILE *fp ;
	char string[20] ;
	fp = fopen("primes.txt" , "r") ;
	
	while( data < 1000000)
	{
		fscanf(fp ,"%d" ,&data) ;
		if(data < 100)
		{/* Do nothing this about what we want */}
		else
		{
			len = sprintf(string ,"%d" ,data) ;
			k = 0 ;
			for(i = 0 ; i < len ; i++)
			{
				if( string[i] == '1' || string[i] == '3' || string[i] == '7' || string[i] == '9' )
				{}
				else
				 {	k = 1 ;
					break ;}
			}
			
			if(k == 0)
			{
				// this is our number okey now we are ready to check rotate and check weather the give prime is or not
				front = 0 ;	
				rear  = len -1 ; 
				for(i = 1 ; i < len ; i++)
				{
					if(!rotate_prime(string , (front +i)%len , (rear + i)%len ,len) )
					{	k = 2  ;		
						break ;
					}
					
				}
				
				if(k == 0)
					l1.push_back(data) ;
				
			}
		}
	}

	for(itr1 = l1.begin() ; itr1 != l1.end() ; itr1++)
		cout <<*itr1 <<"  ";
return l1.size()  + 13;
}
	
int rotate_prime(char *string , int front ,int rear,int len)
{
	int i = 0 ;
	int num ;
	while(i < front)
	{
		string[len+i] = string[i] ;
		i++ ;
	}
	string[len + i] ='\0' ;
	sscanf(&string[front] , "%d" ,&num) ;
	return checkPrime(num) ? 1 : 0 ;	
}
